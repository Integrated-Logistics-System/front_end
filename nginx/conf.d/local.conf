# 🏠 Recipe AI 로컬 개발용 Nginx 설정

# 🔄 로컬 백엔드 업스트림
upstream backend_api {
    server host.docker.internal:8081 max_fails=3 fail_timeout=30s;
    least_conn;
}

# 🔌 로컬 WebSocket 업스트림
upstream backend_ws {
    server host.docker.internal:8083 max_fails=3 fail_timeout=30s;
    ip_hash;
}

# 🌐 Next.js 업스트림
upstream frontend_app {
    server frontend:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# 🚀 메인 서버 블록 (로컬용)
server {
    listen 80;
    listen [::]:80;
    
    server_name localhost;
    
    index index.html index.htm;
    
    # 📊 로그 설정
    access_log /var/log/nginx/recipe-ai-local.access.log;
    error_log  /var/log/nginx/recipe-ai-local.error.log warn;

    # 🔒 보안 설정
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # ================== 🎯 라우팅 설정 ==================

    # 🔗 API 프록시 (로컬 백엔드로 전달)
    location /api/ {
        proxy_pass http://backend_api;
        proxy_http_version 1.1;
        
        # 헤더 전달
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 타임아웃 설정
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 캐시 비활성화
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache 1;
        
        # CORS 헤더
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
    }

    # 🔌 WebSocket 프록시 (로컬 백엔드) - Socket.IO 호환
    location /ws/ {
        proxy_pass http://backend_ws/;
        proxy_http_version 1.1;
        
        # WebSocket 필수 헤더
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 타임아웃
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
        # 버퍼링 비활성화
        proxy_buffering off;
        proxy_request_buffering off;
    }
    
    # Socket.IO를 위한 추가 경로 (Socket.IO는 여러 경로 사용)
    location /socket.io/ {
        proxy_pass http://backend_ws/socket.io/;
        proxy_http_version 1.1;
        
        # WebSocket 필수 헤더
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 타임아웃
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
        # 버퍼링 비활성화
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # 🎨 Static 파일
    location /_next/static/ {
        proxy_pass http://frontend_app;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # 캐싱 설정
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "STATIC";
        
        gzip_static on;
    }

    # 🖼️ 이미지 및 미디어 파일
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        proxy_pass http://frontend_app;
        
        expires 30d;
        add_header Cache-Control "public";
        add_header X-Cache-Status "MEDIA";
        
        gzip_static on;
    }

    # 🏠 메인 애플리케이션
    location / {
        proxy_pass http://frontend_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        proxy_cache_bypass $http_upgrade;
        
        try_files $uri $uri/ @fallback;
    }

    # 📄 SPA Fallback
    location @fallback {
        proxy_pass http://frontend_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 🚫 보안: 숨겨진 파일 차단
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 📊 헬스체크 엔드포인트
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}