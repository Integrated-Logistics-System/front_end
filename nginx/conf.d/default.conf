# 🚀 Recipe AI 프로덕션 Nginx 설정

# 🔄 백엔드 업스트림 (로드밸런싱 대비)
upstream backend_api {
    # 백엔드 서버 (향후 다중 인스턴스 가능)
    server 192.168.0.111:8081 max_fails=3 fail_timeout=30s;
    # server 192.168.0.111:8082 max_fails=3 fail_timeout=30s;  # 스케일링 시
    
    # 로드밸런싱 방식
    least_conn;  # 연결 수 기반
}

# 🔌 WebSocket 업스트림
upstream backend_ws {
    server 192.168.0.111:8083 max_fails=3 fail_timeout=30s;
    
    # WebSocket용 설정
    ip_hash;  # 세션 유지
}

# 🌐 Next.js 업스트림
upstream frontend_app {
    server frontend:3000 max_fails=3 fail_timeout=30s;
    
    keepalive 32;  # Keep-alive 연결 풀
}

# 🔒 HTTP → HTTPS 리다이렉트 (향후 SSL 적용 시)
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }

# 🚀 메인 서버 블록
server {
    listen 80;
    listen [::]:80;
    
    # 서버 이름 (도메인 설정 시 변경)
    server_name _;
    
    # 인덱스 파일
    index index.html index.htm;
    
    # 📊 접속 로그
    access_log /var/log/nginx/recipe-ai.access.log main;
    error_log  /var/log/nginx/recipe-ai.error.log warn;

    # 🔒 보안 설정
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # ================== 🎯 라우팅 설정 ==================

    # 🔗 API 프록시 (백엔드로 전달)
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # 프록시 설정
        proxy_pass http://backend_api;
        proxy_http_version 1.1;
        
        # 헤더 전달
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 타임아웃 설정
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 캐시 비활성화 (API는 동적)
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache 1;
        
        # CORS 헤더 (필요 시)
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
    }

    # 🔌 WebSocket 프록시
    location /ws/ {
        proxy_pass http://backend_ws;
        proxy_http_version 1.1;
        
        # WebSocket 필수 헤더
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 타임아웃 (길게)
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
        # 버퍼링 비활성화
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # 🎨 Static 파일 (Next.js _next/static)
    location /_next/static/ {
        # Rate limiting
        limit_req zone=static burst=50 nodelay;
        
        proxy_pass http://frontend_app;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # 캐싱 설정 (1년)
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "STATIC";
        
        # Gzip 압축
        gzip_static on;
    }

    # 🖼️ 이미지 및 미디어 파일
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        proxy_pass http://frontend_app;
        
        # 캐싱 설정 (30일)
        expires 30d;
        add_header Cache-Control "public";
        add_header X-Cache-Status "MEDIA";
        
        # 압축
        gzip_static on;
    }

    # 🏠 메인 애플리케이션 (Next.js)
    location / {
        proxy_pass http://frontend_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 타임아웃
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 캐시 설정 (동적 페이지)
        proxy_cache_bypass $http_upgrade;
        
        # Fallback (SPA 라우팅)
        try_files $uri $uri/ @fallback;
    }

    # 📄 SPA Fallback
    location @fallback {
        proxy_pass http://frontend_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 🚫 보안: 숨겨진 파일 차단
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 📊 헬스체크 엔드포인트
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# 🔧 Nginx 상태 페이지 (모니터링용)
server {
    listen 8080;
    server_name _;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.31.0.0/16;  # Docker 네트워크
        deny all;
    }
}
