# 🏠 로컬 개발용 Docker Compose (localhost 백엔드)
version: '3.8'

services:
  # Nginx 리버스 프록시 & 로드밸런서 (로컬용)
  nginx:
    image: nginx:1.25-alpine
    container_name: recipe-ai-nginx-local
    ports:
      - "81:80"      # HTTP (80번은 DSM이 사용 중)
    volumes:
      # Nginx 설정 파일 (로컬용)
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/local.conf:/etc/nginx/conf.d/default.conf:ro
      
      # Static 파일 직접 서빙
      - ./nginx/static:/usr/share/nginx/html/static:ro
      
      # 로그 저장
      - ./nginx/logs:/var/log/nginx
    
    environment:
      NGINX_WORKER_PROCESSES: auto
      NGINX_WORKER_CONNECTIONS: 1024
    
    depends_on:
      - frontend
    
    restart: unless-stopped
    
    networks:
      - recipe-ai-local-network
    
    # Docker Desktop의 host.docker.internal 지원
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Next.js Frontend (로컬용)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: recipe-ai-frontend-local
    expose:
      - "3000"
    environment:
      NODE_ENV: production
      
      # API 연결 (로컬 백엔드)
      NEXT_PUBLIC_API_URL: /api
      NEXT_PUBLIC_WS_URL: /ws
      
      NEXT_TELEMETRY_DISABLED: 1
    
    restart: unless-stopped
    
    networks:
      - recipe-ai-local-network
    
    # 로컬 백엔드 연결을 위한 host 설정
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
    # 헬스체크
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  recipe-ai-local-network:
    driver: bridge

# 🎯 로컬 사용법:
# docker-compose -f docker-compose.local.yml up -d
# docker-compose -f docker-compose.local.yml logs -f